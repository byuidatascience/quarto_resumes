---
format:
  html:
    toc: true
    grid:
      sidebar-width: 50px
      body-width: 800px
      margin-width: 200px
      gutter-width: 1.5rem
  pdf:
    pdf-engine: weasyprint
css: cv.css
execute:
  echo: false
format-links: [pdf]
---

```{python}
import polars as pl
from IPython.display import Markdown

projects = pl.read_parquet("default_tables/projects.parquet")
skills = pl.read_parquet("default_tables/skills.parquet")
work = pl.read_parquet("default_tables/work.parquet")
education = pl.read_parquet("default_tables/education.parquet")
contact = pl.read_parquet("default_tables/contact.parquet")

```

```{python}
#| tags: [parameters]
name_id = contact.select("name").item()
email_id = contact.select("email").item()
github_id = contact.select("github").item()
linkedin_id = contact.select("linkedin").item()
telephone_id = contact.select("phone").item()
```

```{python}
import polars as pl
from IPython.display import Markdown
```



`{python} Markdown(f'# {name_id}')`

____

:::: {.columns}

::: {.column width="22%"}
`{python} Markdown(f'[{email_id}](mailto:{email_id})')`
:::

::: {.column width="1%"}
:::

::: {.column width="22%"}
`{python} Markdown(f'[Github](https://github.com/{github_id})')`
:::

::: {.column width="1%"}
:::

::: {.column width="22%"}
`{python} Markdown(f'[LinkedIn.com](https://www.linkedin.com/in/{linkedin_id}/)')`
:::

::: {.column width="1%"}
:::


::: {.column width="22%"}
`{python} Markdown(f'[{telephone_id}](tel:{telephone_id})')`
:::


::::

____
____


## EDUCATION

```{python}
e1 = education.slice(0,1)
s1 = e1.select('school').item()
d1 = e1.select('degree').item()
ex1 = e1.select(pl.col('expected').dt.to_string("%b %Y")).item()
```

`{python} Markdown(f'**{d1}** <br> *{s1}* [*Expected: {ex1}*]')`{.cvdate}


## SKILLS


## WORK EXPERIENCE

```{python}
work1 = work.slice(0,1)
work2 = work.slice(1,1)
work3 = work.slice(2,1)
work4 = work.slice(3,1)
work5 = work.slice(4,1)
```

```{python}
p1 = work1.select('position').item()
c1 = work1.select('company').item()
l1 = work1.select('location').item()
s1 = work1.select(pl.col('start').dt.to_string("%b %Y")).item()
e1 = work1.select(pl.col('end').dt.to_string("%b %Y")).item()
b1 = work1.select('bullets').item().split("- ")
```

```{python}
b1a = pl.DataFrame({"bullets":b1})\
  .filter(pl.col("bullets").str.len_chars() > 1)\
  .item(0, "bullets")
b1b = pl.DataFrame({"bullets":b1})\
  .filter(pl.col("bullets").str.len_chars() > 1)\
  .item(1, "bullets")
b1c = pl.DataFrame({"bullets":b1})\
  .filter(pl.col("bullets").str.len_chars() > 1)\
  .item(2, "bullets")

```

`{python} Markdown(f'### {p1}')`

`{python} Markdown(f'***{c1}*** [{s1} -- {e1}]')`{.cvdate}

`{python} Markdown(f'- {b1a}')`
`{python} Markdown(f'- {b1b}')`
`{python} Markdown(f'- {b1c}')`



## PROJECTS


<!-- ::: {.print-only .contact-block}

::: -->

<!-- ## WORK EXPERIENCE{style="page-break-before: always"} -->

<!-- ::: {.no-print}
::: -->

<!-- ::: {.print-only}
## References
Available upon request
::: -->


